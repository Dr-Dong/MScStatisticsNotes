\documentclass[12pt]{article}
%\usepackage[landscape]{geometry}  
\usepackage[landscape,hmargin=2cm,vmargin=1.5cm,headsep=0cm]{geometry} 
% See geometry.pdf to learn the layout options. There are lots.
\geometry{a4paper}                   % ... or a4paper or a5paper or ... 
%\geometry{landscape}                % Activate for for rotated page geometry
%\usepackage[parfill]{parskip}    % Activate to begin paragraphs with an empty line rather than an indent
\usepackage{hyperref}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{epstopdf}
\usepackage{multicol}

\usepackage{graphicx}

 \usepackage{float}
 \setkeys{Gin}{width=0.25\textwidth}

\usepackage[table]{xcolor}

\newcommand\x{\times}
\newcommand\y{\cellcolor{green!10}}

\newcommand{\pder}[2][]{\frac{\partial#1}{\partial#2}}

\newcommand{\argmin}{\arg\!\min}
\newcommand{\argmax}{\arg\!\max}


\newtheorem{definition}{Definition}

\newtheorem{theorem}{Theorem}

\newtheorem{fact}{Fact}

\newtheorem{proposition}{Proposition}


% Turn off header and footer
\pagestyle{plain}
 

% Redefine section commands to use less space
\makeatletter
\renewcommand{\section}{\@startsection{section}{1}{0mm}%
                                {-1ex plus -.5ex minus -.2ex}%
                                {0.5ex plus .2ex}%x
                                {\normalfont\large\bfseries}}
\renewcommand{\subsection}{\@startsection{subsection}{2}{0mm}%
                                {-1explus -.5ex minus -.2ex}%
                                {0.5ex plus .2ex}%
                                {\normalfont\normalsize\bfseries}}
\renewcommand{\subsubsection}{\@startsection{subsubsection}{3}{0mm}%
                                {-1ex plus -.5ex minus -.2ex}%
                                {1ex plus .2ex}%
                                {\normalfont\small\bfseries}}
\makeatother

% Define BibTeX command
\def\BibTeX{{\rm B\kern-.05em{\sc i\kern-.025em b}\kern-.08em
    T\kern-.1667em\lower.7ex\hbox{E}\kern-.125emX}}

% Don't print section numbers
%\setcounter{secnumdepth}{0}

\newcommand{\eps}{\epsilon}
\newcommand{\al}{\alpha}

\setlength{\parindent}{0pt}
\setlength{\parskip}{0pt plus 0.5ex}


\usepackage{Sweave}
\DeclareGraphicsRule{.tif}{png}{.png}{`convert #1 `dirname #1`/`basename #1 .tif`.png}

\usepackage{cancel}

%% taken from http://brunoj.wordpress.com/2009/10/08/latex-the-framed-minipage/
\newsavebox{\fmbox}
\newenvironment{fmpage}[1]
{\begin{lrbox}{\fmbox}\begin{minipage}{#1}}
{\end{minipage}\end{lrbox}\fbox{\usebox{\fmbox}}}

\usepackage{mathtools}
\makeatletter
 
\newcommand{\explain}[2]{\underset{\mathclap{\overset{\uparrow}{#2}}}{#1}}
\newcommand{\explainup}[2]{\overset{\mathclap{\underset{\downarrow}{#2}}}{#1}}
 
\makeatother

\SweaveOpts{prefix.string=MatAlgfigs/MatAlgfig}

\SweaveOpts{cache=TRUE}

\title{Multivariate Analysis Summary Sheet}
\author{Shravan Vasishth (vasishth@uni-potsdam.de)}
\date{\today}                                           % Activate to display a given date or no date

\begin{document}

\SweaveOpts{concordance=TRUE}
\footnotesize
\maketitle
\tableofcontents

\newpage

\begin{multicols}{3}


% multicol parameters
% These lengths are set only within the two main columns
%\setlength{\columnseprule}{0.25pt}
\setlength{\premulticols}{1pt}
\setlength{\postmulticols}{1pt}
\setlength{\multicolsep}{1pt}
\setlength{\columnsep}{2pt}

\begin{center}
     \normalsize{Multivariate Analysis Summary Sheet} \\
    \footnotesize{
    Compiled by: Shravan Vasishth (vasishth@uni-potsdam.de)\\
    Version dated: \today}
\end{center}

<<echo=F>>=
options(width=60)
options(continue=" ")
@

\section{Preliminaries}

We will treat $X'$ as the data matrix:

\begin{equation}
X'=\begin{pmatrix}
x_{11} & \dots & x_{1p}\\
\vdots & \vdots & \vdots \\
x_{n1} & \dots & x_{np}\\
\end{pmatrix}
\end{equation}

\subsection{Sample mean}

The \textbf{sample mean vector} is:

\begin{equation}
\bar{x} = \begin{pmatrix}
\bar{x}_1 \\
\vdots\\
\bar{x}_p\\
\end{pmatrix}
=
\frac{1}{n} 
\begin{pmatrix}
x_{11} + \dots + x_{n1}\\
\vdots  \\
x_{1p} + \dots + x_{np}\\
\end{pmatrix}
\end{equation}

More compactly: $\bar{x} = \frac{1}{n}X1 \Leftrightarrow \bar{x}' = \frac{1}{n}1'X'$.

\subsection{Sample variance}

Sample variance (variance-covariance) matrix:

\begin{equation}
S_{p\times p} = var(X') = \frac{1}{n-1} (X-\bar{X}) (X-\bar{X})'
\end{equation}

$\bar{X}_{p\times n}=[\bar{x} \dots \bar{x}]$

\textbf{Properties of S}:

$S$ is symmetric, $S_{ii}$ is sample variance, and $S_{ij}$ is sample covariance.

If columns of S are linearly independent (i.e., if none of the variables is a linear combination of the other), S is non-singular, and positive definite.

The \textbf{sample correlation matrix} R is the same as the vcov matrix, but has entries scaled:

\begin{equation}
r_{ij}=\frac{s_{ij}}{\sqrt{s_{ii}s_{jj}}}
\end{equation}

If $L$ be the diagonal matrix:

$
\begin{pmatrix}
s_{11} & \dots & 0\\
0 & \dots & 0\\
0 & \dots & s_{nn}\\
\end{pmatrix}
$
and $L^{1/2}$ has sds along the diagonal, then

\begin{equation}
S=L^{1/2} R L^{1/2}
\end{equation}

\begin{enumerate}
\item R is symmetric, $p\times p$
\item $r_{ii}=1$ for all i
\item $-1 \leq r_{ij} 1$.
\item Geometrically, $r_ij$ is the cosine of the angle between the vectors of deviations of observations of the ith and jth variables from the mean.
\begin{enumerate}
\item If angle is 0 deg (0 rad), $\rho=1$.
\item If angle is 90 deg ($\pi/2$ rad), $\rho=0$.
\end{enumerate}
to-do example
\end{enumerate}

\section{Some useful results}

\begin{enumerate}
\item
Let $w$ be a vector. Then $var(X'w) = w'var(X')w=w'Sw$. 
\item If $A$ is any $p\times q$ matrix, then $Var(X'A)=A'Var(X')A=A'SA$.
\end{enumerate}

\section{Useful properties of eigenvalues and eigenvectors}

Let $A_{p\times p}$, and let eigenvalues be $\lambda_i$.

\begin{enumerate}
\item $\sum \lambda_i = trace(A)$
\item $\prod \lambda_i = det(A)$
\item If $\lambda_i$ is an eigenvalue of A, then there is at least one vector $x_i$, called an eigenvector of A, such that $Ax_i = \lambda_i x_i$.
\item If A is realand symmetric $p\times p$, then there are always p linearly independent eigenvectors.
\item If C is any non-singular square matrix, then A and $CAC^{-1}$ have the same eigenvalues. If $x_i$ is an eigenvector of A with eigenvalue $\lambda_i$, then $Cx_i$ is an  eigenvector of $CAC^{-1}$ with eigenvalue $\lambda_i$. [Prove it]
\item If A is real symmetric, i.e., $A=A'$. Then the eigenvalues of A are real. [Prove it]
\item If A is real symmetric, and $\lambda$ and $\mu$ are eigenvalues, and x and y are corresponding eigenvectors, then x and y are orthogonal. [Prove it]
\item If A is real symmetric, and if X denotes the matrix whose columns are normalized eigenvectors of A, then X is an orthogonal matrix ($XX'=I$, or $X'=X^{-1}$). [Prove it]

Also, $X^{-1}AX=\Lambda$, where $\Lambda$ is the diagonal matrix containing the eigenvalues of A along the diagonal. This is because $AX = X\Lambda$.

The decomposition $X^{-1}AX=\Lambda$ is called the \textbf{spectral decomposition}, and is equivalent to 

\begin{equation}
A=\lambda_1 x_1 x_1' + \dots + \lambda_p x_p x_p'
\end{equation}

where $x_i$ is an eigenvector of A with eigenvalue $\lambda_i$.
\item 
If A is any positive definite real symmetric matrix, it will have positive definite real symmetric square roots. [Prove it]
%If A is any positive definite real symmetric matrix, with orthogonal eigenvectors $x_1,\dots,x_p$, corresponding to eigenvalues $\lambda_1,\dots,\lambda_p$ (which are positive). 
\item The eigenvalues of a variance-covariance matrix are non-negative.
\end{enumerate}

\section{Vector calculus review}

Some useful results:

\begin{enumerate}
\item 
If S is a symmetric $p\times p$ vector, and if $f(x)=x'Sx$. Then $\frac{\delta f}{\delta x} = 2Sx$. [Derive this.]
\item 
If S is not symmetric, $\frac{\delta f(x)}{\delta x} = (S + S')x$
\item
If S is I, then $\frac{\delta f(x)}{\delta x}=\frac{\delta x'x}{\delta x}=2x$.
\item If a is a constant p-vector, and $f(x)=a'x$, then $\frac{\delta f}{\delta x}=a$. 
\end{enumerate}

\section{Constrained optimization (Lagrange Multipliers)}

Suppose $t_1, \dots, t_n$ are unbiased estimates of $\theta$, and variance of $t_i$, $i=1,\dots,n$, is $\sigma_i^2$.

<<>>=
## t_i, equal variance
t<-rnorm(10)
@

Find \textbf{B}est \textbf{L}inear \textbf{U}nbiased \textbf{E}stimator of $\theta$.

Solution:

The BLUE of $\theta$ will be a weighted sum of the $t_i$. Let this weighted sum be $\tau = \sum a_i t_i$, such that $E[\tau]=\theta$. 

We need to minimize the variance: $Var(\tau)=Var(\sum a_i t_i)=\sum a_i^2 Var(t_i)=\sum a_i^2\sigma_i^2$.

Since $E[t_i] = E[\tau]=\theta$, the weights $a_i$ must sum to 1. So the constraint is that $\sum a_i = 1$. 

So, we minimize this function:

\begin{equation}
\Omega = \sum a_i^2\sigma_i^2 + \lambda (\sum a_i - 1)
\end{equation}

Differentiating with respect to  each $a_i$, we get: $2 a_i\sigma_i^2 +\lambda = 0$, which implies that

\begin{equation}\label{ai}
a_i = -\frac{\lambda}{2 \sigma_i^2}
=
-\frac{1}{2}\frac{\lambda}{\sigma_i^2}
\end{equation}

Differentiating with respect to the Lagrangian, we get

\begin{equation}
\sum a_i - 1 = 0
\end{equation}

Replacing $a_i$ in the above with the RHS in equation~\ref{ai},

\begin{equation}
\sum  -\frac{1}{2}\frac{\lambda}{\sigma_i^2} - 1 = 0
\end{equation}

Adding -1 to both sides:

\begin{equation}
\sum  -\frac{1}{2}\frac{\lambda}{\sigma_i^2}  = 1
\end{equation}

Multiplying both sides by -1:

\begin{equation}
\sum  \frac{1}{2}\frac{\lambda}{\sigma_i^2}  = -1
\end{equation}

Solve for $\lambda$ (change index i to k):

\begin{equation}
\lambda   = \frac{-1}{\frac{1}{2}}\frac{1}{\frac{1}{\sum \sigma_k^2}} = \frac{-2}{\frac{1}{\sum \sigma_k^2}}
\end{equation}

Now we can figure out each $a_i$ by plugging in $\lambda$ into 

\begin{equation}
a_i = -\frac{1}{2}\frac{\lambda}{\sigma_i^2} = -\frac{1}{2}\frac{\frac{-2}{\frac{1}{\sum \sigma_k^2}}}{\sigma_i^2} = \frac{1}{\sigma_i^2} \left[ \frac{1}{\sum \sigma_k^2}\right]^{-1}
\end{equation}

Finally, we need to plug in the definition of $a_i$ into $\tau=\sum a_i t_i$. At this stage it makes sense to use the index i again (instead of k):

\begin{equation}
\tau = \sum a_i t_i = \sum \left[ 
\frac{1}{\sigma_i^2} \left[ \frac{1}{\sum \sigma_k^2}\right]^{-1}
\right] t_i = \sum \frac{t_i}{\sigma_i^2} \left[ \frac{1}{\sum \sigma_k^2}\right]^{-1}
\end{equation}

\section{Multivariate distributions}

Definition: If $\mu$ is a p-vector and $\Sigma$ is a positive definite symmetric $p\times p$ matrix, then MVN distribution $N_p(\mu,\Sigma)$ is:

\begin{equation}
f_x(x) = \frac{1}{(2\pi)^{p/2} \mid \Sigma \mid^{1/2} } \exp \left( -\frac{1}{2} (x-\mu)' \Sigma^{-1} (x-\mu) \right)
\end{equation}

\begin{enumerate}
\item
The quadratic form $(x-\mu)' \Sigma^{-1} (x-\mu)$ in the kernel is a statistical distance measure; for any value of x, the quadratic form gives the squared statistical distance of x from $\mu$, called squared Mahalanobis distance.  
\item
Note that the MVN density is constant on surfaces of contours where

$(x-\mu)' \Sigma^{-1} (x-\mu)=c^2$

``The axes of each ellipsoid of constant density are in the direction of the eigen- vectors of $\Sigma^-1$ (recall that these are the same as the eigenvectors of $\Sigma$, but if $\Sigma x=\lambda x$, then
$\Sigma^{-1} x=\lambda^{-1} x$), and their lengths are proportional to the reciprocals of the square roots of the eigenvalues of $\Sigma^{-1}$.'' (p.\ 95)

\item 
If $x \sim N_p(\mu,\Sigma)$,
then

\begin{enumerate}
\item
$(x-\mu)' \Sigma^{-1} (x-\mu)\sim \chi_p^2$.
\item 
The solid ellipsoid $\{x\mid (x-\mu)' \Sigma^{-1} (x-\mu) \leq \chi_p^2(\alpha)\}$ has probability $1-\alpha$.
\end{enumerate}

This follows from the fact that if $x\sim N_p(\mu,\Sigma)$ then 
$y=\Sigma^{1/2} (x-\mu)\sim N_p(0,I_p)$ and therefore:

\begin{equation}
y'y = (x-\mu)' \Sigma^{-1} (x-\mu) = \sum_{i=1}^2 Y_i^2 \sim \chi_p^2
\end{equation}

``One of the consequences of the properties is that the marginal distributions of the individual variables of a multivariate normal distribution is a univariate normal distribu- tion.'' (p.\ 96)

\item
If $X\sim N_p(\mu,\Sigma)$ and w is a p-vector, then the linear combination $w'X \sim N(w'\mu,w'\Sigma w)$.
\item 
If $X\sim N_p(\mu,\Sigma)$ and A is a $q\times p$ matrix, then the linear combination $AX \sim N(A\mu,A\Sigma A')$.
\item 
If $X\sim N_p(\mu_X,\Sigma_X)$ and $Y\sim N_q(\mu_Y,\Sigma_Y)$, then the p+q vector 

$\begin{pmatrix}
X\\
Y
\end{pmatrix}
\sim N_{p+q}\left( 
\begin{pmatrix}
\mu_X\\
\mu_Y
\end{pmatrix},
\begin{pmatrix}
\Sigma_X & 0 \\
0 & \Sigma_Y\\
\end{pmatrix}
\right)
$

as long as X and Y are independent.
\item 
If
$\begin{pmatrix}
X\\
Y
\end{pmatrix}
\sim N_{p+q}\left( 
\begin{pmatrix}
\mu_X\\
\mu_Y
\end{pmatrix},
\begin{pmatrix}
\Sigma_X & \Sigma \\
\Sigma' & \Sigma_Y\\
\end{pmatrix}
\right)
$

then X and Y are independent iff $\Sigma=0$.

\end{enumerate}

\section{Principal Components Analysis}

Useful mostly when we have continuous data.

[Sources: Tutorial on PCA by Shlens, ]

Let $X_{n\times p}$ be our data, where we have p different variables, and n measurements on each variables. Example:

<<>>=
n<-5
x1<-c(1,3,5,7,9)
x2<-c(4,7,8,11,15)
## n=5, p=2:
X<-data.frame(x1=x1,x2=x2)
## centered variables:
x1<-scale(x1,scale=F)
x2<-scale(x2,scale=F)
X<-data.frame(x1,x2)
X<-as.matrix(X)
@

The matrix $\frac{1}{n-1}X'X$ is the real symmetric variance-covariance matrix, and represents the relationships between the variables:

<<print=TRUE>>=
var1<-(1/(n-1))*t(X)%*%X
var2<-var(X)
@

The total amount of dispersion on the data is the sum of the variances (the trace):

<<>>=
## sum of the variances=the total dispersion:
sum(diag(var2))
@

\begin{fact}
Any symmetric matrix X is 
diagonalized by an orthogonal matrix of its eigenvectors (see Theorems 1 and 2 in MatrixAlgebraSummary.pdf). 
For a symmetric matrix X, $X = EDE^T$, 
where D is a diagonal matrix and E is a matrix of eigenvectors of X arranged as columns.
\end{fact}


\textbf{PCA using eigenvalue decomposition}:

The goal is to find some orthonormal matrix P in $Y = PX$ such that the covariance matrix $C_Y = \frac{1}{n} Y Y^T$ is a diagonal matrix. The rows of P are the \textit{principal components} of X.

First, write $C_Y$ in terms of the unknown Y:

\begin{equation}
\begin{split}
C_Y =& \frac{1}{n} Y Y^T\\
    =& \frac{1}{n} (PX)(PX)^T\\
    =& \frac{1}{n} PXX^T P^T\\
    =& P (\frac{1}{n} XX^T) P^T\\
C_Y =& PC_X P^T \\   
\end{split}
\end{equation}

Choose P to be a matrix such that each row $p_i$ is an eigenvector of $Cov_X$. So $P=E^T$ where E has the eigenvectors of X in each column. Also note that $P^{-1} = P^T$.

Next, we show that this choice of P diagonalizes $C_Y$---that's the goal of PCA.
\begin{equation}
\begin{split}
C_Y =& PC_X P^T\\
    =& P(E^TDE)P^T\\
    =& P(P^TDP)P^T\\
    =& (PP^T) D (PP^T)\\
    =& (PP^{-1}) D (PP^{-1})\\
C_Y    =& D
\end{split}
\end{equation}

Key point: the i-th diagonal value $C_Y$ is the variance of X along the principal component (an eigenvector) $p_i$.

The real symmetric var-cov matrix var2 can be decomposed into $U\lambda U'$, where

\begin{enumerate}
\item
U is the orthonormal matrix containing the eigenvectors of var2
\item 
$\lambda$ is a diagonal matrix containing the eigenvalues of var2
\end{enumerate}

<<>>=
lambda<-diag(eigen(var2)$values)
U<-eigen(var2)$vectors
U%*%lambda%*%t(U)
@

We want to linearly transform the vectors 
x1 and x2:

\begin{center}
\includegraphics[height=5cm,width=7cm]{bestfitPC}
\end{center}

In this figure, the largest direction of variance lies along the best fit line, not perpendicular to the best fit line. Thus, by assumption, the dynamics of interest lie along the direction with largest variance. Maximizing the variance corresponds to finding the appropriate rotation of the naive basis.

\textbf{By transforming $X'$ to $Y'=aX'$, we have projected $X'$ onto $a$, a one-dimensional space, a single line. The values of $Y'$ give the co-ordinates of each observation along the vector a}.

For example, if we have 
$x_1 = 
\begin{pmatrix}
1\\
2
\end{pmatrix}, 
x_2 = 
\begin{pmatrix}
2\\
1
\end{pmatrix}, 
x_3 = 
\begin{pmatrix}
-1\\
1
\end{pmatrix}$, and 
$a = 
\begin{pmatrix}
\frac{3}{5}\\
\frac{-4}{5}
\end{pmatrix}$, then 

$X' = 
\begin{pmatrix}
1 & 2\\
2 & 1\\
-1 & 1 
\end{pmatrix}$. 

Therefore $Y' = X'a = 
\begin{pmatrix}
-1 \\
\frac{2}{5}\\
-\frac{7}{5}
\end{pmatrix}$.

So, $x_1 = -1.a + z_1$ where $z_1$ is orthogonal to a. And so on.

<<echo=FALSE>>=
op<-par(mfrow=c(1,2),pty="s")
plot(x1,x2,xlim=c(-6,6),ylim=c(-6,6),
     main="")
abline(lm(x2~x1))
## First PC is always along the line
## of best fit:
arrows(x0=0,y0=0,x1=5*U[1,1],y1=5*U[2,1],lwd=2)
arrows(x0=0,y0=0,x1=5*U[1,2],y1=5*U[2,2],lty=2)
#legend(x=-5,y=20,lty=c(1,2),legend=c("PC1","PC2"))
library(MVA)
bvbox(X)
arrows(x0=0,y0=0,x1=5*U[1,1],y1=5*U[2,1],lwd=2)
arrows(x0=0,y0=0,x1=5*U[1,2],y1=5*U[2,2],lty=2)
@

If the maximum variance were \textit{not}
along the line of best fit, but in a perpendicular direction, the first PC would point in that direction:

<<echo=FALSE>>=
x1<-c(1,2,3,3,2)
x2<-c(20,55,4,30,5)
x1<-scale(x1,scale=F)
x2<-scale(x2,scale=F)
op<-par(mfrow=c(1,2),pty="s")
plot(x1,x2,xlim=c(-33,33),ylim=c(-33,33))
abline(lm(x2~x1))
X<-data.frame(x1,x2)
X<-as.matrix(X)
lambda<-eigen(var(X))$values
U<-eigen(var(X))$vectors
arrows(x0=0,y0=0,x1=20*U[1,1],y1=20*U[2,1])
arrows(x0=0,y0=0,x1=20*U[1,2],y1=20*U[2,2],lty=2)

bvbox(X)
arrows(x0=0,y0=0,x1=5*U[1,1],y1=20*U[2,1],lwd=2)
arrows(x0=0,y0=0,x1=U[1,2],y1=U[2,2],lty=2)
@
\begin{center}
\includegraphics[height=5cm,width=7cm]{PC2}
\end{center}


Assumption (sometimes incorrect): \textbf{Large variances have important structure}. 
Therefore maximize variance to find the most important PCs.

The reasoning is that if variance is small, then all the observations have similar values, so there is little information in the data. If variance is large, then we have more ``information''.

\subsection{Geometric interpretation}

Basically, the PCA method just rotates the data so that the ellipsoid's axes are the principal components.

\subsection{Presentation from lecture notes}

\textbf{Goal}: reduce $X_{n\times p}$ to $Y_{n\times q}$

``A linear transformation $X' \rightarrow Y'$ is given by $Y'=X'A$ where A is a $p\times p$-matrix; it makes statistical sense to restrict attention to non-singular matrices A. If A happens to be an orthogonal matrix, i.e., $A'A=I_p$,then the transformation $X'\rightarrow Y'$  is an orthogonal transformation (i.e., just a rotation and/or a reflection of the n points in p-dimensional space)''.

We want to choose A such that variance X'A is maximized; this is because ``maximizing the variance corresponds to finding the appropriate rotation of the naive basis'' (Shlens tutorial). 

How to choose A such that variance of $X'A$ is maximized? If we just choose some A:
<<>>=
m<-matrix(rnorm(1000),byrow=TRUE,ncol=10)
diag(var(m))
a<-matrix(rnorm(100),byrow=TRUE,ncol=10)
@
You can increase variance arbitrarily
by multiplying a with some number, here 2:

<<>>=
head(round(diag(m1<-var(m%*%a)),digits=2))
head(round(diag(m2<-var(m%*%(2*a))),
           digits=2))
@
Notice that variances have increased by
a factor of $2^2$:

<<>>=
diag(m2)/diag(m1)
@

\textbf{The point here}: The ``maximum variance'' here is unbounded. We can increase it arbitrarily. To maximize variance, we have to constrain it somehow, and that's why a constraint is imposed (below), that $w_i' w_i$ sums to 1 and the eigenvectors $w_i, w_j$ ($i\neq j$) are orthogonal.

\begin{theorem}
The $p$ principal components of data $X'$ are the $p$ eigenvectors $a_1,\dots,a_p$ corresponding to the $p$ ordered eigenvalues $\lambda_1 \geq \dots \geq \lambda_p$ of S, the variance of $X'$.
[Theorem 3.3 in lecture notes]
\end{theorem}

\begin{definition}
The first principal component is the vector $a_1$ such that the projection of the data $X'$ onto $a_1$, i.e., $X'a_1$, has maximal variance, subject to the normalising constraint that $a_1'a_1 = 1$ (i.e., $a_1$ has length 1).
\end{definition}

\subsection{PCA example by hand}

To find first PC, we maximize $w_1 S w_1$ subject to $w_1' w_1=1$, where $S=X'X$. $w_1$ will be the eigenvector representing the direction of the maximum variance.

\begin{equation}
w_1' S w_1 - \lambda_1 (w_1' w_1 -1)
\end{equation}

Differentiating with respect to $w_1$ gives:

\begin{equation}
S w_1 - \lambda_1 w_1 = 0 \Leftrightarrow 
S w_1 = \lambda_1 w_1
\end{equation}

But this means that $\lambda_1$ is an eigenvalue of S, and that $w_1$ is the corresponding eigenvector.

When finding the second principal component, we want to ensure that $w_2$ is uncorrelated to $w_1$. This means that $w_2' S w_1=0$, but since $S w_1 = \lambda_1w_1$, we have $w_2' w_1 = 0$.

So the second PC $w_2$ should have the property that the projection of $X'$ onto $w_2$ should have maximum variance subject to $w_2'w_2=1$ and 
$w_2' w_1 = 0$. Since we have two constraints we will use two Lagrangian multipliers:

\begin{equation}
\Omega_2 = w_2' S w_2 -\mu w_2' w_1 - \lambda_2(w_2' w_2 -1 )
\end{equation}

Differentiate with respect to $w_2$:

\begin{equation} \label{e0}
2S w_2 -\mu w_1 - 2\lambda_2 w_2=0
\end{equation}

Pre-multiplying each side with $w_1'$:

\begin{equation}\label{e1}
2w_1'S w_2 -\mu w_1'w_1 - 2\lambda_2 w_1'w_2=0
\end{equation}

Pre-multiplying by $w_2'$:

\begin{equation}\label{e3}
2w_2'S w_2 -\mu w_2'w_1 - 2\lambda_2 w_2'w_2=0
\end{equation}

Because $\lambda_2 w_1'w_2=0$, we can see from equation~\ref{e1} that

\begin{equation}
\mu = 2w_1'S w_2 = 2(Sw_a)' w_2 = 2(\lambda_1 w_1)' w_2 = 2\lambda_2 w_1' w_2=0
\end{equation}

From equation~\ref{e0}, we can then conclude that

\begin{equation}
2S w_2 = \lambda_2 w_2
\end{equation}

Therefore, $w_2$ is an eigenvector of S, with eigenvalue $\lambda_2$.

Recall that $var(X'w_2) = w_2'var(X')w_2 = w_2'Sw_2$. Equation~\ref{e3} is that:

\begin{equation}
2w_2'S w_2 -\mu w_2'w_1 - \lambda_2 w_2'w_2=0
\end{equation}

Replacing $w_2'S w_2$ with $var(X'w_2)$, we get that:

\begin{equation}
2var(X'w_2) -\explain{\mu w_2'w_1}{=0} - 2\lambda_2 w_2'w_2=
var(X'w_2) - 2\lambda_2 = 0
\end{equation}

Therefore, $var(X'w_2) = 2\lambda_2$. This entails that $\lambda_2$ must be the second largest eigenvalue with eigenvector $w_2$. (Question: why is this entailed?)

All Principal Components can be found using the diagonalization of S. The eigenvalue decomposition of S is also called the \textbf{spectral decomposition} of S. The set of eigenvalues is called the \textbf{spectrum} of S.

\subsection{Computing PCs using eigen()}

<<>>=
x<-c(1,3,5,7,9)
y<-c(4,7,8,11,15)
plot(x,y)
xy<-data.frame(x=x,y=y)
var_matrix<-var(xy)
lambda<-eigen(var_matrix)$values
eigenvectors<-eigen(var_matrix)$vectors
## first principal component 
## contains 99.2% of 
## the information:
lambda[1]/(lambda[1]+lambda[2])
## using prebuilt function:
xy_pc<-princomp(xy)
plot(xy_pc)
#source("code/scree.R")
@

\subsection{How to map the points onto the PC}

Take the first example above:

<<>>=
n<-5
x1<-c(1,3,5,7,9)
x2<-c(4,7,8,11,15)
## n=5, p=2:
## centered variables:
x1<-scale(x1,scale=F)
x2<-scale(x2,scale=F)
X<-data.frame(x1,x2)
X<-as.matrix(X)
S<-var(X)
lambda<-eigen(S)$values
U<-eigen(S)$vectors
@

The first set of points $x_1=(1,4)$, and $e_1$ is the first PC.

\begin{equation}
x_1  = \bar{x} + te_1 + ue_2
\end{equation}

$\bar{x}=0$ as data are centered, so we have:

\begin{equation}
x_1  = te_1 + ue_2
\end{equation}
 Premultiplying by $e_1$:
 
\begin{equation}
e_1' x_1  = e_1' te_1 + e_1' ue_2 = t
\end{equation}

So, $t= e_1' x_1$ (\textbf{or}: $t= x_1' e_1$), so $x_1=t e_1$. I.e.,
$t e_1$ is the point where 
$x_1$ is mapped on to on the first PC. 

<<echo=FALSE>>=
x1<-c(1,3,5,7,9)
x2<-c(4,7,8,11,15)
## n=5, p=2:
X<-data.frame(x1=x1,x2=x2)
## centered variables:
x1<-scale(x1,scale=F)
x2<-scale(x2,scale=F)
X<-data.frame(x1,x2)

X<-as.matrix(X)
S<-var(X)
lambda<-eigen(S)$values
U<-eigen(S)$vectors
@

<<echo=FALSE>>=
plot(x1,x2,xlim=c(-6,6),ylim=c(-6,6),
     main="")
abline(lm(x2~x1))
## First PC is always along the line
## of best fit:
arrows(x0=0,y0=0,x1=5*U[1,1],y1=5*U[2,1],lwd=2)
arrows(x0=0,y0=0,x1=5*U[1,2],y1=5*U[2,2],lty=2)
arrows(x0=0,y0=0,x1=x1[1],y1=x2[1],lty=1,lwd=2)
t<-t(U[,1])%*%X[1,]
U1<-t*U[,1]
arrows(x0=0,y0=0,x1=U1[1],y1=U1[2],lty=1,lwd=3)
@

\includegraphics[height=5cm,width=7cm]{PCmapping}

\subsection{Computing PCs using the correlation matrix}

Needed when data are of mixed type, or one variable has very high variance compared to others. 

\textbf{Rule of thumb}:
``If the largest variance is more than about 4 times the smallest, then use the correlation matrix (otherwise the variables with large variance will dominate the principal component calculation).''

One should use the vcov matrix if
the scales of measurement are similar,  and the standard deviations of all variables are similar.

\textbf{Note}: The sort of interpretation given in the turtle example is valid only really when the variance matrix is used rather than the correlation matrix.

Interpretation of loadings is only viable for small numbers of variables.


Steps:

\begin{enumerate}
\item Center and scale data to get a correlation matrix:

<<>>=
x1<-c(1,2,4,4,5,6,8,10)
x2<-c(2,3,6,7,8,11,13,14)
x1<-scale(x1,scale=F)
x2<-scale(x2,scale=F)
X<-data.frame(x1,x2)
X<-as.matrix(X)
S<-var(X)
lambda<-eigen(S)$values
U<-eigen(S)$vectors
S_corr<-cov2cor(S)
@

\end{enumerate}

\subsection{Quadratic PCA}

With a very small number of variables, one might try to generalise to e.g., quadratic principal components by adding variables for each quadratic combination.

\subsection{Other things to look up}

\begin{enumerate}
\item Projection pursuit
\item ICA
\item Factor analysis
\item Kohonen's SOMs
\item Generative topographic mapping
\end{enumerate}

\section{Multidimensional scaling}

Goal: visualize a proximity matrix, if possible with a  good lower-dimensional approximation (similar to PCA).

\textbf{The mathematical problem}: $n\times n$ proximity matrix (a symmetric matrix of $\delta_{ij}$ dissimilarities), find a q-dimensional space such that the calculated distance matrix $d_{ij}$ reasonably matches the given dissimilarity matrix $\delta_{ij}$. We can generally find one for $q=n-1$. The more interesting case is when q is very small.

Aims of MDS:

\begin{enumerate}
\item To learn about the measure of dissimilarity itself
\item To discover underlying structure in the data
\item
To see whether the data naturally divides into groups (clustering)
\end{enumerate}


\subsection{Principal coordinate analysis (classical metric scaling)}

PCA = classical MDS

\begin{theorem}
D is a matrix of Euclidean distances iff B is  positive semidefinite (iff all eigenvalues of B are semidefinite).\hfill
[Theorem 4.2, p.\ 52]
\end{theorem}

Given a distance matrix $D=(\delta_{ij})$, we find the configuration of points:

\begin{enumerate}
\item 
Find B=HAH, where $A=-\frac{1}{2} \delta_{ij}^2$, and $H=I_n - \frac{1}{n} J_n$.
\item Find eigenanalysis of B.
\item Transpose matrix of eigenvectors.
\item The columns of this transposed matrix are the principal coordinates of the points.
\end{enumerate}

\textbf{Example}:

<<>>=
x<-c(1,3,5,7,9)
y<-c(4,7,8,11,15)
D<-matrix(rep(NA,25),ncol=5)
## compute Eudlidean distance:
for(i in 1:5){
  for(j in 1:5){
    d<-(x[i]-x[j])^2+(y[i]-y[j])^2
    D[i,j]<-d
  }
}
A<- -0.5 * D
H<-diag(5) - (1/5)*matrix(rep(1,25),ncol=5)

B<- H%*% A %*% H
eigen_B<-eigen(B)
head(eigen_B$values)
## take first eigenvector:
v1<-eigen_B$vectors[,1]
f<-v1*sqrt(eigen_B$values[1])
## D2 fits with D:
D2<-matrix(rep(NA,25),ncol=5)
for(i in 1:5){
  for(j in 1:5){
    d<-(f[i]-f[j])^2
    D2[i,j]<-d
  }
}
@

\section{Cluster analysis}

%http://stackoverflow.com/questions/15376075/cluster-analysis-in-r-determine-the-optimal-number-of-clusters?imm_mid=0bf394&cmp=em-strata-na-na-newsltr_20140702_elist

\section{Multivariate analysis}

To test the null hypothesis: $H_0: \mu_1=\mu_2$.
From the lecture notes (p.\ 102): obtain the sample Mahalanobis distance $D^2$ and reject $H_0$ if 

\begin{equation}
\frac{n_1 n_2 (n-p -1 )}{n(n-2)p} D^2 > F_{p,n-p-1}(\alpha)
\end{equation}

where $D^2$:

\begin{equation}
D^2= (\bar{x}_1-\bar{x}_2)' S^{-1}(\bar{x}_1-\bar{x}_2)
\quad S = \frac{(n_1 -1)S_1 + (n_2 -1)S_2}{n-2}
\end{equation}

To test the hypothesis

\begin{equation}
H_0:
\begin{pmatrix}
\mu_{1}\\
\mu_{2}\\
\end{pmatrix}
=
\begin{pmatrix}
\mu_{3}\\
\mu_{4}\\
\end{pmatrix}
\end{equation}

the procedure is identical, except that $\bar{x}_1$ are vectors, not single values. 

\subsection{Assessing normality}

One can plot $D^2$ against the appropriate chi-squared distribution:

<<>>=
library(MVA)
#chiplot
@

\subsection*{Analysis using the library ICSNP}

Example code (From ex 3):

\begin{verbatim}
m1<-with(shapedata,
         HotellingsT2(cbind(taper,point) ~ batch))
\end{verbatim}         
     

\section{Time Series}         

\subsection{Smoothing: Moving averages (MAs)} \label{movavg}

At each time point t, take the average of the observations around t, and plot 

\begin{equation}
\frac{1}{2q+1} \sum_{i=-q}^q y_{t+i}\hbox{ against } t
\end{equation}

where $y_t$ is the observation at time $t$.

\textbf{The span} of the MA is the number of values averaged over.

\subsubsection{Linear filter: More general instance of MA (Weighting)}

Taking a moving average amounts to weighting each $y_t$ by 1/span:

\begin{equation}
\sum a_i y_{t+1} \hbox{ against } t \quad \sum a_i = 1
\end{equation}

The moving average is the special case where 

\begin{equation}
a_i= 
\begin{cases}
\frac{1}{2q+1} & \hbox{ if } \mid i \mid \leq q \\
0 & \hbox{otherwise}\\
\end{cases}
\end{equation}

A plausible weight be a=1/12 for monthly measurements, 1/4 for quarters.

Suppose we take a mean at $x=3$: $X_3'=\frac{y_1+y_2+y_3+y_4}{4}$, and then another one $X_3''=\frac{y_2+y_3+y_4+y_5}{4}$.
We could take a mean of these two means:

\begin{equation}
\begin{split}
\frac{1}{2}(X_3'+X_3'') =& \frac{1}{2}(\frac{y_1+y_2+y_3+y_4}{4}+
\frac{y_2+y_3+y_4+y_5}{4})\\
=& \frac{y_1}{8} + \frac{y_2+y_3+y_4}{4}+\frac{y_5}{8}
\end{split}
\end{equation}

The general formula is:

\begin{equation}
x_t = \frac{y_{t-2}}{8} 
+ 
\frac{y_{t-1} + y_t + y_{t+1}}{4}
+
\frac{y_{t+2}}{8}
\end{equation}

to-do: Detrending.

%\subsubsection{Linear and polynomial estimates of trend}

\subsection{The classical decomposition}

\begin{equation}
\begin{split}
y_t =& m_t + s_t + r_t\\
=& \hbox{trend} + \hbox{seasonal/cyclic} + \hbox{residual/random}
\end{split}
\end{equation}

The trend is computed by $m_t$. We can \textbf{detrend} the 
time series. $m_t$ is estimated from $\hat m_t$.

\begin{equation}
d_t = y-\hat m_t \approx s_t + r_t 
\end{equation}

to-do: some stuff about averaging that I didn't understand.

\subsection{Differencing}

This provides a simple method of removing trend, without explicitly estimating it.

\begin{equation}
\nabla y_t = y_t - y_{t-1}
\end{equation}

Define an operator $B$, called a 
\textbf{backward shift operator}: 

\begin{equation}
B y_t = y_{t-1}
\end{equation}

This allows us to rewrite 

\begin{equation}
\begin{split}
\nabla y_t =& y_t - y_{t-1}\\
=& y_t  - B y_t\\
=& (1- B) y_t\\
\end{split}
\end{equation}

So what we have is \textbf{first-order differencing}, which removes linear trend:

\begin{equation}
\nabla y_t = (1- B) y_t
\end{equation}

\textbf{Second-order differencing}

\begin{equation}
\begin{split}
\nabla^2 y_t =& (y_t - y_{t-1}) - (y_{t-1} - y_{t-2})\\
=& y_t - 2y_{t-1} + y_{t-2} = (1-B)^2 y_t
\end{split}
\end{equation}

Second-order differening removes polynomial trend.

\textbf{k-th order differencing}

\begin{equation}
\nabla^k y_t = (1-B)^k y_t 
\end{equation}

removes k-th degree polynomial trend. Ususally, k=1 or 
k=2 is enough. 

``First-, second-, \dots, k-th order differencing are 
sometimes called \textbf{ordinary differencing}''.

If there is seasonal variation with known cyclicity k, the 
period can be removed by doing a k-order differencing:

For k=12, we say this is differencing with lag 12, or seasonal differencing if monthly series are involved.


<<echo=FALSE>>=
dir<-"/Users/shravanvasishth/Dropbox/MScStatistics/2014-2015/MAS6011/Semester2/Data/"

whisk<-read.table(paste(dir,"Whisk.txt",
                        sep=""))
whisk_ts<-ts(whisk,start=c(1980),end=1987,
             frequency=12)
@

<<fig=FALSE>>=
ts.plot(whisk_ts,
        ylab="hectoliters of whiskey 
        per month",
        xlab="month")
@

Another example:
<<>>=
sheftempq<-scan(paste(dir,"Sheftemq.txt",
                        sep=""))
shef_ts<-ts(sheftempq,start=c(1963),end=1978,
             frequency=4)
ts.plot(shef_ts,ylab="temp.",
        xlab="quarter")
@

The decompose function:

<<echo=FALSE>>=
whisk_ts_decomp<-decompose(whisk_ts)
#str(whisk_ts_decomp)
@

<<fig=FALSE>>=
op<-par(mfrow=c(1,3),pty="s")
plot(whisk_ts_decomp$seasonal)
plot(whisk_ts_decomp$trend)
plot(whisk_ts_decomp$random)
@

<<>>=
diffts<-diff(whisk_ts,lag=12)
plot(diffts)
@

\subsection{Auto-correlation function (ACF)}

ACF is not really a function, it's a sequence. It's a tool for 
detecting patterns in data. For each lag h, we compute the standard correlation
coefficient. 

\paragraph{Classical correlation} Suppose we have random variables
X, Y. Then, correlation is:

\begin{equation}
r = \frac{\sum (X_i - \bar{X})(Y_i - \bar{Y})}{
\sqrt{\sum (X_i - \bar{X})^2 \sum (Y_i - \bar{Y})^2} }
\end{equation}

Assuming that $y_t$ is stationary (h is the lag of the ACF), the correlation for each lag h is computed as follows:

\begin{equation}
r_h = \frac{\sum_{t=1}^{n-h} (Y_{t} - \bar{Y})(Y_{t+h} - \bar{Y})}{
\sqrt{\sum_{t=1}^{n} (Y_t - \bar{Y})^2 \sum_{t=1}^{n-h} (Y_{t+h} - 
\bar{Y})^2}}
\end{equation}

The \textbf{sample ACF} is: $h \mapsto r_h$, and the plot is called a
\textbf{correlogram}. The plot is only made for $h\geq 1$. The correlation at h=0 is by definition 1.  

<<fig=FALSE>>=
acf(whisk_ts)
@

\section{Probability models for stationarity and non-stationary time series}

General strategy:

\begin{enumerate}
\item 
Plot series, note features
\item
Remove trend and seasonal components
\item
Choose a model to fit the residuals
\item
To forecast, forecast the residuals, then invert transformations (put back trend and seasonal components) to get forecast of the original series.
\end{enumerate}

The convention usually is $Y_1,\dots, Y_n$ are random variables; and $y_1,\dots, y_n$ are realizations of their values.  In these notes, $y_i$ can refer to both the RV and the realization, depending on context. E.g., when we say $E[y_t]$, this refers to the RV, and $y_t=6$ refers to a realization.

\subsection{Strong stationarity}

This occurs when  the \textbf{joint} distribution $y_{t_1},\dots,y_{t_k}$ is the same 
as that of $y_{t_{1+s}},\dots,y_{t_{k+s}}$, for any $s, k, t_1, \dots, t_k$.

The probability properties of the sequence don't change over time. 
$y_t$ has the same distribution as $y_{t+s}$.

Consequences:

\begin{enumerate}
\item
$\mu_t = E[y_t] = E[y_{t+s}] = \mu_{t+s}=\mu$
\item
$\sigma_t^2 = Var(y_t) = Var(y_{t+s}) = \sigma_{t+s}^2=\sigma^2$
\item
Covariance function (function only of $h$): $\gamma_h = Cov(y_t, y_{t+h}) = Cov(y_{t+s}, y_{t+h+s})$. $\gamma_h$ is the covariance function at lag $h$.

Note that knowing $\gamma_h$ for all $h$ tells us what the variance $\sigma^2$ is too, since $\gamma_0=\sigma^2$.
\end{enumerate}

\subsection{Weak or second-order stationarity}

The means, variances, and covariances are finite, and the following hold:

\begin{enumerate}
\item 
$E[y_t] = \mu$
\item 
$Var(y_t) = \sigma^2$
\item
$Cov(y_t,y_{t+h}) = \gamma_h$
\end{enumerate}

whatever the value of t.

Whenever we say stationarity, we mean weak stationarity.

\subsection{(Theoretical) ACF $\rho_h$}

This is the theoretical analog of the sample ACF.
For a weakly stationary process:

\begin{equation}
\rho_h = Cor(y_t,y_{t+h}) =  
\frac{Cov(y_t,y_{t+h})}{\sqrt{Var(y_t) Var(y_{t+h})}} = \frac{\gamma_h}{\gamma_0}
\end{equation}

Note that $h=0, \pm 1,\dots$.


$\rho_h$ has the properties:

\begin{enumerate}
\item
$-1\leq  \rho_h \leq 1$
\item
$\rho_h = \rho_{-h}$ 
\item
$\rho_0=1$
\item
$\rho_h=0$ if $y_t$ and $y_{t+h}$ independent. 
Note: if $\rho_h=0$, this does not entail $y_t$ and $y_{t+h}$ independent unless both are normally distributed variables.
\end{enumerate}

\subsection{Purely random series (white noise, WN)}

Such a sequence is called a white noise sequence:

\begin{equation}
y_t = \eps_t \quad E[\eps_t] = 0, Var( \eps_t) = \sigma^2
\end{equation}

$\rho_h=1$ for $h=0$, and 0 otherwise.

\subsection{Autoregressive (AR) models}

This is the definition of an AR(p) sequence:

\begin{equation}
y_t = a_1y_{t-1} +a_2y_{t-2} +\dots+a_py_{t-p}  + \eps_t \quad E[\eps_t] = 0
\end{equation}

$Var( \eps_t) = \sigma^2, \eps_t \sim WN(0,\sigma^2)$.


\paragraph{Example: Unemployment Figures}

\begin{itemize}
\item
$U_t$: the unemployment total at time t.
\item 
$1-\alpha$: proportion who find a job before the next month. So $\alpha$ is proportion unemployed in next month.
\item 
Then, $U_t$: people unemployed from last month plus people unemployed this month:

$U_t=\alpha U_{t-1} + \eta_t $
\item If $E[U_t]=\mu$ for all t, then, if we subtract $\mu$ from both sides:

\begin{equation}
U_t - \mu = \alpha U_{t-1} -\mu + \eta_t 
\end{equation}

and then add $\alpha \mu - \alpha \mu$ to the RHS:

\begin{equation}
U_t - \mu = \alpha U_{t-1} -\mu + \eta_t + (\alpha \mu - \alpha \mu)
\end{equation}

Rearranging terms and collecting common terms together:

\begin{equation}
U_t - \mu= \alpha( U_{t-1} - \mu)+ (\alpha -1)\mu + \eta_t
\end{equation}

Setting $y_t = U_{t} - \mu$,
and $y_{t-1} = U_{t-1} - \mu$, and 
$\eps_t = (\alpha-1)\mu + \eta_t$,
we can write:

\begin{equation}
y_t= \alpha y_{t-1}+ \eps_t
\end{equation}

\item
Two conditions that must be satisfied:

\begin{itemize}
\item
$E[y_t]=(\alpha-1)\mu+E[\eta_t] = 0$
\item
$E[\eps_t]=0, Var(\eps_t)=\sigma^2$
\end{itemize}
\end{itemize}

\subsubsection{AR(1)}

This is the special case where we regress only on the previous value:

\begin{equation}
y_t= \alpha y_{t-1}+ \eps_t \quad \eps_t \sim WN(0,\sigma^2)
\end{equation}

We can use the backward shift operator (a functional: a function that takes a function as an argument) B, to express AR(1).

By convention, we let $B^0 y_t = 1$. This allows us to write, more generally:

\begin{equation}
%By_t = y_{t-1} \quad \hbox{ or } 
B^{i}y_t = y_{t-i}, i=1,\dots,t, 0 \leq i \leq t 
\end{equation}

Then, we can write 

\begin{equation}
y_t= \alpha y_{t-1}+ \eps_t 
\end{equation}

as

\begin{equation}
y_t= \alpha B^{i}y_t+ \eps_t 
\end{equation}

Rearranging to get $\eps_t$ on RHS:

\begin{equation}
y_t - \alpha B^{i}y_t= \eps_t \Rightarrow y_t(1 - \alpha B^{i})= \eps_t 
\end{equation}

\begin{equation}
\phi(B)y_t = \eps_t \quad \phi(B)=(1 - \alpha B^{i})
\end{equation}

Here, $\phi(B)$ is a polynomial of degree one (a linear function of B).

We can express $y_t$ as follows:

\begin{equation}
y_t = \phi(B)^{-1}\eps_t \quad \phi(B)=(1 - \alpha B^{i})
\end{equation}

\paragraph{Basic properties of AR(1) processes}

\begin{enumerate}
\item \textbf{MA($\infty$) representation}: Consider AR(1):

\begin{equation}
\begin{split}
y_t=& \alpha y_{t-1}+ \eps_t \\
=& \alpha (\alpha y_{t-2}+ \eps_{t-1}) + \eps_t \\
=& \alpha (\alpha (\alpha y_{t-3}+ \eps_{t-2})+ 
\eps_{t-1}) + \eps_t \\
=& \dots\\
=& \alpha^t y_0 + \sum_{i=0}^{t-1} \alpha_i \eps_{t-i}  
\end{split}
\end{equation}

As $t\rightarrow \infty$, if $\mid \alpha \mid < 1$ and $y_0$ finite, we get:

\begin{equation}
\sum_{i=0}^{\infty} a^i \eps_{t-i}
\end{equation}

Thus, as long as $\mid a_i\mid <1$, we have a \textbf{minimum moving average} representation of AR(1):

\begin{equation}
y_t = \sum_{i=0}^{\infty} a^i \eps_{t-i}
\end{equation}

This will make it easier to compute mean, variance, and acf.

\item \textbf{Expectation, variance and acf}:


\begin{equation}
E[y_t] = \sum_{i=0}^{\infty} \alpha^i E[\eps_{t-i}] = 0
\end{equation}

\begin{equation}
Var(y_t) = \sum_{i=0}^{\infty} \alpha^{2i} 
\explain{Var(\eps_{t-i})}{\hbox{indep. because white noise}} = 
\frac{\sigma^2}{1-\alpha^2} \quad \mid \alpha \mid < 1
\end{equation}

The above follows due to the geometric series (infinite sum).

The covariance: (Recall: Cov(X,Y)=E[XY] - E[X]E[Y])

\begin{equation}
\gamma_h = E[y_ty_{t+h}]-\explain{E[y_t]}{=0}\explain{E[y_{t+h}]}{=0} =
E[y_ty_{t+h}]
\end{equation}

Since $E[y_t] = \sum_{i=0}^{\infty} \alpha^i \eps_{t-i}$ and 
$E[y_{t+h}] = \sum_{j=0}^{\infty} \alpha^j \eps_{t+h-j}$,

\begin{equation}
\gamma_h = E[y_ty_{t+h}]-\explain{E[y_t]}{=0}\explain{E[y_{t+h}]}{=0}
\end{equation}

\begin{equation}
\begin{split}
E[y_ty_{t+h}] =& 
E[\sum_{i=0}^{\infty} \alpha^i \eps_{t-i}
\sum_{j=0}^{\infty} \alpha^j \eps_{t+h-j}]\\
=& E[\sum_{i,j=0}^{\infty} \alpha^i \eps_{t-i}
\alpha^j \eps_{t+h-j}]\\
\end{split}
\end{equation}

\label{zeroexpectation}
If $t-i \neq t+h -j$, we have $E[\eps_{t-i}\eps_{t+h-j}]=0$ because the errors are independent.
And if $t-i = t+h -j$, this implies that $j=i+h$. Consequently, for this case, we can write

\begin{equation}
\begin{split}
E[\eps_{t-i}\eps_{t+h-j}] =& 
E[\eps_{t-i}\eps_{t+h-(i+h)}]\\
=& E[\eps_{t-i}\eps_{t-i)}]\\
=& E[\eps_{t-i}^2]=Var(\eps_{t-i})=\sigma^2
\end{split}
\end{equation}

The last line above follows because 
$Var(\eps_{t-i})=E[\eps_{t-i}^2]-E[\eps_{t-i}]^2=E[\eps_{t-i}^2]$.

This allows us to write $E[\sum_{i,j=0}^{\infty} \alpha^i \eps_{t-i}
\alpha^j \eps_{t+h-j}]$ as:

\begin{equation}
\begin{split}
E[y_ty_{t+h}] =& \sigma^2 \sum_{i=0}^{\infty} \alpha^{i}\alpha^{i+h} \quad j=i+h \\
=& \sigma^2 \alpha^h\sum_{i=0}^{\infty}  \alpha^{2i}\\
=& \frac{\sigma^2\alpha^h}{1-\alpha^2} \quad \mid \alpha \mid < 1
\end{split}
\end{equation}

So, we have:

\begin{equation}
\gamma_h = \frac{\sigma^2\alpha^h}{1-\alpha^2}
\end{equation}


ACF: 

\begin{equation}
\begin{split}
\rho_h =& \frac{\gamma_h}{\gamma_0}\\
=& \frac{\cancel{\sigma^2} \alpha^h/\cancel{(1-\alpha^2)}}{\cancel{\sigma^2}
\alpha^0/\cancel{(1-\alpha^2)}}\\
=& \alpha^{\mid h \mid} \quad h=0, \pm 1, \dots \mid \alpha \mid < 1\\
\end{split}
\end{equation}

\textbf{So the mean, variance, and ACF do not depend on time t.} So, the $y_t$
satisfies the conditions for stationarity.  


\end{enumerate}

<<>>=
a<-seq(0.01,.99,by=.1)

h<-seq(0,100,by=1)

op<-par(mfrow=c(5,2),pty="s")
for(alpha in a){
plot(h,alpha^h/(1-alpha^2),type="l",main=alpha)
}

nega<--1*a
op<-par(mfrow=c(5,2),pty="s")
for(alpha in nega){
plot(h,alpha^h/(1-alpha^2),type="l",main=alpha)
}
@

Note that $\mid \alpha \mid<1$ (in order for the series to converge).

\paragraph{Example of non-convergence when $ \alpha = 1$: Random Walk}


If $\alpha=1$, then the AR(1) doesn't 
have stationarity anymore:

The definition of AR(1) is:

\begin{equation}
y_t = \alpha y_{t-1} + \eps_t
\end{equation}

<<>>=
nsim<-10000
ys<-rep(NA,nsim)
ys[1]<-rnorm(1)

for(i in 2:nsim){
ycurrent<-ys[i-1]+rnorm(1)
ys[i]<-ycurrent
}
plot(ts(ys))
@

If $\alpha=1$, then 

\begin{equation}
y_t = y_{t-1} + \eps_t
\end{equation}

The expectation of $y_t$:

\begin{equation}
E[y_t] = E[y_{t-1}] + E[\eps_t] = E[y_{t-1}] \forall t
\end{equation}

Therefore, $E[y_t]=E[y_1]=constant$. This satisfies the first condition for
stationarity.

But the variance is:

\begin{equation}
Var(y_t) = Var(y_{t-1}) + Var(\eps_t)
\end{equation}

We have to establish here that $Var(y_{t-1})$ and $Var(\eps_t)$ are independent. This is so because, we can write:

\begin{equation}
y_{t-1} = y_{t-2}+\eps_{t-1}
\end{equation}

So, $y_{t-1}$ is a function of $\eps_{t-1},\eps_{t-2},\dots$. And
$\eps_{t-1}$ is independent of $\eps_{t}$ as $t-i \neq t$, for $i=1,2,\dots$.

Due to the independence of $Var(y_{t-1})$ and $Var(\eps_t)$, it follows that:

\begin{equation}
Var(y_t) = Var(y_{t-1}) + Var(\eps_t)
=  Var(y_{t-1}) + \sigma^2
\end{equation}

This proves that the variance will increase with t; it will go to infinity in the limit.
This violates stationarity unless $\sigma^2=0$. Note that if 
$\sigma>0$ and $Var(y_{t-1})$ is infinite, then we have stationarity.

Writing the above recursively:

\begin{equation}
\begin{split}
Var(y_t) =& Var(y_{t-1}) + Var(\eps_t)\\
=&  Var(y_{t-1}) + \sigma^2\\
=&  Var(y_{t-2}) + \sigma^2+\sigma^2\\
=& Var(y_{1})+\underbrace{\sigma^2+\dots+\sigma^2}_\text{t-1 times}\\
=& Var(y_{0})+\underbrace{\sigma^2+\dots+\sigma^2}_\text{t times}\\
=&Var(y_{0})+t\sigma^2
\end{split}
\end{equation}

So, as $t\rightarrow \infty$, $Var(y_t)\rightarrow \infty$, since $\sigma^2>0$. Actually, we don't even need to go so far as to find the limit, we just need to note that $Var(y_t)$ depends on $t$, so the sequence 
$\{y_t\}$ is not stationary. 
\textbf{This kind of model is relevant in finance (stock prices).}

\textbf{Note that for AR(1) in general, $Var(y_t)<\infty \Leftrightarrow$ stationarity}.

Note that differencing will reduce $y_t$ to stationarity:

\begin{equation}
\nabla y_t = y_t - y_{t-1} = \cancel{y_{t-1}} + \eps_t - \cancel{y_{t-1}} =
 \eps_t
\end{equation}

$Var(\nabla y_t) = Var(y_{t-1} - y_{t-1} + \eps_t) = Var(\eps_t) = \sigma^2$.

\paragraph{Example} Note that a negative alpha will lead to the acf 
``oscillating'' between positive (even) and negative (odd) values.

\begin{equation}
y_t = -0.8\times y_{t-1}+\eps_t
\end{equation}

<<>>=
y<-arima.sim(100,model=list(ar=-.8))
ts.plot(y)
acf(y)
@

\subsection{AR(p), $p>1$}

Given an AR(p) process:

\begin{equation}
y_t = a_{1}y_{t-1} + \dots + a_p y_{t-p} + \eps_t 
\end{equation}

The general approach will be to get the white noise to the right, and the y's to the LHS:

\begin{equation}
\begin{split}
~& y_t - a_{1}y_{t-1} - \dots - a_p y_{t-p} =  \eps_t \\
\Leftrightarrow & y_t - a_1 B y_t - \dots - a_p B^p y_t = \eps_t \quad \hbox{ recall } B^i y_t =  \eps_t\\
\Leftrightarrow& \underbrace{(1-a_1 B - \dots - a_p B^p)}_\text{$\phi(B)$} 
y_t = \eps_t\\
\Leftrightarrow& \phi(B) y_t = \eps_t
\end{split}
\end{equation}

This gives us the moving average representation.

The $MA(\infty)$ representation is

\begin{equation}
y_t = \sum_{i=1}^{\infty} \psi_i \eps_t \quad \hbox{ where } \psi_i \hbox{ are appropriate constants }
\end{equation}

The polynomial $\phi(B) y_t = \eps_t$ is extremely important, because it determines whether we have a stationary process or not.

\subsubsection{The AR Polynomial}

\begin{equation}
\phi(x) = 1- \alpha_1 x - \dots - \alpha_p x^p
\end{equation}

If $\phi(x)=0$, then $\mid x \mid >1$.

\begin{definition}
An AR(p) process is causal iff all roots of $\phi(x)= 0$ lie outside the unit circle.
\end{definition}

\paragraph{Example} AR(1)

In AR(1)

\begin{equation}
y_t = ay_{t-1} + \eps_t
\end{equation}

was stationary if $\mid a \mid < 1$. If p=1, then the AR poylnomial is 

$\phi(x)= 1- ax$

The root is $\phi(x)=0\Rightarrow x=\frac{1}{\mid a\mid}$. This implies that $\mid a\mid<1$.

\subsubsection{Deriving ACF for AR(p): The Yule-Walker (difference) equations}

We are going to derive $\gamma_h$.

Recall that (we proved this earlier) that 
$\gamma_h = E[y_{t-h} y_t]=\gamma_{-h}$, because ACF depends only on lag, not on time t.

\begin{equation}
\begin{split}
\gamma_h =& Cov(y_{t-h} y_t)\\
=& E[y_{t-h} y_t] \quad \hbox{ recall } E[y_t]=0\\
\end{split}
\end{equation}
 
Replace $y_t$ with its expansion in AR(p). I will replace $\alpha$ with $a$ for convenience:

\begin{equation}
E[y_{t-h} y_t] = E[y_{t-h} (a_1y_t+\dots+a_p 
y_{t-p}+\eps_t)]
\end{equation}

Multiplying out the terms:

\begin{equation}
\begin{split}
E[y_{t-h} (a_1y_{t-1}+\dots+a_p 
y_{t-p}+\eps_t)] =& \\
a_1 E[y_{t-h}y_{t-1}]+ \dots ~&  \\
+ a_p E[y_{t-h}y_{t-p}]+
E[y_{t-h} \eps_t] ~&\\
\end{split}
\end{equation}

We will now work out $E[y_{t-h}y_{t-1}]$. 
We can rewrite this as $E[y_{(t-1)-(h-1)}y_{t-1}]$. Rewrite $t-1$ as $t*$.

\begin{equation}
\begin{split}
E[y_{t-h}y_{t-1}] =& E[y_{(t-1)-(h-1)}y_{t-1}]\\
=& E[y_{t*-(h-1)}y_{t*}]\\
\end{split}
\end{equation}

The model is causal; the ACF doesn't depend on t, so 

\begin{equation}
E[y_{t*-(h-1)}y_{t*}]=\gamma_{h-1}
\end{equation}

So, we are going to get:

\begin{itemize}
\item $E[y_{t*-(h-1)}y_{t*}]=\gamma_{h-1}
$
\item \dots
\item $E[y_{(t-p)-(h-p)}y_{t-p}]=
E[y_{t*-(h-p)}y_{t*}]=\gamma_{h-p}$
\end{itemize}

Next, we show that $E[y_{t-h}]E[\eps_t]=0$.
Since $y_t$ is causal, 
$y_{t-h}$ is written as a linear combination 
of $\eps_{t-h}, \eps_{t-h-1},\dots$, and each of these $\eps$ are independent of $\eps_t$ because the indices are different; 
i.e., $t-h\neq t, t-h-1\neq t,\dots$,
since $\{\eps_t\}$ is white noise.

Hence $y_{t-h}$ is independent of $\eps_t$.

%Since $y_{t-h}$ can be written as a linear combination of all $\eps$, the last term 
%$E[y_{t-h} \eps_t]=0$: 
%$E[y_{t-h}\eps_t]= E[y_{t-h}]E[\eps_t]=0$.

From the above results, we can write:

\begin{equation}
\gamma_h= E[y_{t-h}y_t] = a_1 \gamma_{h-1}+
\dots+a_p \gamma_{h-p}
\end{equation}

So, ACF of AR(p) is given by

\begin{equation}
\rho_h=\frac{\gamma_h}{\gamma_0}=
\frac{a_1 \gamma_{h-1}+ \dots+a_p \gamma_{h-p}}{\gamma_0}
\end{equation}

In other words:

\begin{equation}
\rho_h=a_1 \rho_{h-1}+ \dots+a_p \rho_{h-p}
\end{equation}

The above is the \textbf{Yule-Walker (difference) equation}.

For example, an AR(2) process:
$y_t = 0.5 y_t + 0.25 y_{t-2} + \eps_t$.

<<>>=
## not sure if this is right: 
#y<-arima.sim(100,model=list(ar=c(0.5,0.25)))
#ts.plot(y)
#acf(y)
@

\subsection{MA processes of order q: MA(q)}

\begin{equation}
y_t = \sum_{i=0}^{q} \beta_i \eps_{t-i} = \beta_0 \eps_t +
\beta_1 \eps_{t-1} + \dots +
\beta_q \eps_{t-q}
\end{equation}

Assume that $\beta_0=1$. 

Why do we call it a Moving Average (MA) process? If you consider $\beta_i$ as weights, then this equation is reminiscent of the MAs. But the MA process, confusingly, has nothing to do with Moving Averages discussed earlier in section~\ref{movavg}.
This equation is about estimation. 

\subsubsection{The expectation}

As before, the mean of $y_t=0$.

\begin{equation}
E[y_t] = \sum \beta_1 E[\eps_{t-i}] = 0 \hbox{ since } E[\eps_{t-i}]=0
\end{equation}

\subsubsection{Variance}

\begin{equation}
\begin{split}
Var(y_t) =& Var(\sum_{i=0}^{q} \beta_i \eps_{t-i})\\
=& \sum_{i=0}^{q} \beta_i^2 Var(\eps_{t-i}) \quad \hbox{ because } \eps_{t-i},\eps_{t} \hbox{ are indep.\ RVs }\\
=& \sigma^2 \sum_{i=0}^{q} \beta_i^2 \\
=& \sigma^2 (1+\beta_1^2+\dots+\beta_q^2)
\end{split}
\end{equation}

\subsubsection{ACF of MA(q)}

\begin{equation}
\begin{split}
\gamma_h = & Cov(y_t y_{t+h}) \\
= & E[y_t y_{t+h}]\\
\end{split}
\end{equation}

Since $y_t = \sum_{i=0}^{q} \beta_i \eps_{t-i}$
and $y_{t+h} = \sum_{j=0}^{q} \beta_j \eps_{t+h-j}$,
we can write the last line above as:

\begin{equation}
\begin{split}
 E[y_t y_{t+h}] = & E[\sum_{i=0}^{q} \sum_{j=0}^{q}
 \beta_i \beta_j \eps_{t-i}\eps_{t+h-j} ]\\
 = & \sum_{i=0}^{q} \sum_{j=0}^{q}
 \beta_i \beta_j E[\eps_{t-i}\eps_{t+h-j}]\\
\end{split}
\end{equation}

Only when $t-i = t+h-j$, and consequently $j=i+h$, do we have a non-zero expectation. When $t-i \neq t+h-j$, expectation of the $\eps$ is 0. (see page~\pageref{zeroexpectation}).

When $E[\cdot]\neq 0$, E[\eps_{t-i}^2] = Var(\eps_{t-i})=\sigma^2$.
So, 

\begin{equation}
\begin{split}
\gamma_h = & Cov(y_t y_{t+h}) \\
= & E[y_t y_{t+h}]\\
= & \sum_{i=0}^{q-h} \beta_i \beta_{i+h} \sigma^2 \\
=& \sigma^2 \sum_{i=0}^{q-h} \beta_i \beta_{i+h}\\
\end{split}
\end{equation}

The upper bound in the summation is $q-h$ because we have $i+h$ as a subscript, and $(q-h) + h = q$, which is the maximum value we can have. Hence, i can only have maximal value $q-h$.

So:

\begin{equation}
\gamma_h= 
\begin{cases}
 \sigma^2 \sum_{i=0}^{q-h} \beta_i \beta_{i+h} & \hbox{ if } 
t-i = t+h-j  \\
0 & \hbox{otherwise}\\
\end{cases}
\end{equation}

It follows that 

\begin{equation}
\rho_h = \frac{\gamma_h}{\gamma_0} = \frac{\cancel{\sigma^2} \sum_{i=0}^{q-h} \beta_i \beta_{i+h}}{\cancel{\sigma^2} \sum_{i=0}^{q}\beta_i}
= \frac{\sum_{i=0}^{q-h} \beta_i \beta_{i+h}}{\sum_{i=0}^{q}\beta_i}
\end{equation}

Thus,

\begin{equation}
\rho_h= 
\begin{cases}
0 & \hbox{ for } h>q\\
\frac{\sum_{i=0}^{q-h} \beta_i \beta_{i+h}}{\sum_{i=0}^{q}\beta_i} & \hbox{ for }  h\leq q\\
\end{cases}
\end{equation}

So, we could in principle use ACF to identify which $q$ is appropriate, because as soon as $h>q$, the ACF function will a value of $\rho_h=0$.

<<>>=
y<-arima.sim(100,model=list(ar=.9))
plot.ts(y)
@

The above kind of plot is a very useful tool for identifying AR(q) produces.

\paragraph{Notes}

\begin{enumerate}
\item $q\rightarrow \infty \Rightarrow MA(\infty)$ is only used to represent AR(1).
\item 
Stationarity holds iff $Var(y_t) < \infty$, that is, $\sum_{i=0}^{q} \beta_i^2 < \infty$.
\end{enumerate}

So, we can identify an appropriate model by looking at the ACF. We want a 1-to-1 relationship between ACF and model. But we have a problem: the ACF is non-unique.

\subsubsection{Non-uniqueness of ACF}

Consider an MA(1) process:

\begin{equation}
y_t = \beta_0\eps_t + \beta_1 \eps_{t-1}
=\eps_t + \beta_1 \eps_{t-1}
\end{equation}

The ACF is 
$\rho_h = \frac{\beta_1}{1+\beta_1^2}$ when h=1 and 0 otherwise.

Suppose now that we have a second MA(1) model:

\begin{equation}
x_t =\eps_t + \frac{1}{\beta_1} \eps_{t-1}
\end{equation}

The ACF now is 

\begin{equation}
\rho_h' = 
\frac{\frac{1}{\beta_1}}{1+\frac{1}{\beta_1^2}}
= \frac{\beta_1}{1+\beta_1^2}= \rho_h !!!
\end{equation}

So, two clearly different models have the same ACF: looking at the ACF will not necessarily lead to a unique model.

\subsubsection{Invertible process}

If we want to use ACF to identify a unique model, we can do the following. Take an MA(1) model:

\begin{equation}
y_t = \eps_t + \beta_1 \eps_{t-1}
\end{equation}

Let 

\begin{equation}
\eps_t = y_t  - \beta_1 \eps_{t-1}  
\end{equation}

and 

\begin{equation}
\eps_{t-1} = y_{t-1}  - \beta_1 \eps_{t-2}  
\end{equation}

Expanding out $\eps_{t-1}$ in the following equation

\begin{equation}
y_t = \eps_t + \beta_1 \eps_{t-1}
= \eps_t + \beta_1(y_{t-1}  - \beta_1 \eps_{t-2})
\end{equation}

This is going to be an infinite series:

\begin{equation}
y_t = - \sum_{i=1}^{\infty} (-\beta_i)^{i} y_{t-1} + \eps_t 
\end{equation}

This is an $AR(\infty)$ iff $\mid \beta_1\mid < 1$. This rules out second model above as $\mid \frac{1}{\beta} \mid = \mid \beta' \mid > 1$.

\end{multicols}

\end{document}

